!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.GeojsonEquality=e()}}(function(){return function e(t,o,r){function n(c,s){if(!o[c]){if(!t[c]){var u="function"==typeof require&&require;if(!s&&u)return u(c,!0);if(i)return i(c,!0);var a=new Error("Cannot find module '"+c+"'");throw a.code="MODULE_NOT_FOUND",a}var p=o[c]={exports:{}};t[c][0].call(p.exports,function(e){var o=t[c][1][e];return n(o?o:e)},p,p.exports,e,t,o,r)}return o[c].exports}for(var i="function"==typeof require&&require,c=0;c<r.length;c++)n(r[c]);return n}({1:[function(e,t){function o(e){return e.coordinates.map(function(t){return{type:e.type.replace("Multi",""),coordinates:t}})}function r(e,t){return e.hasOwnProperty("coordinates")?e.coordinates.length===t.coordinates.length:e.length===t.length}function n(e,t){var o,r=Object.keys(e);if(r.length!==Object.keys(t).length)return!1;for(o=0;o<r.length;o++){if(!(r[o]in t))return!1;if(e[r[o]]!==t[r[o]])return!1}return!0}var i=function(e){this.precision=e&&e.precision?e.precision:17,this.direction=e&&e.direction?e.direction:!1,this.pseudoNode=e&&e.pseudoNode?e.pseudoNode:!1,this.objectComparator=e&&e.objectComparator?e.objectComparator:n};i.prototype.compare=function(e,t){if(e.type!==t.type||!r(e,t))return!1;switch(e.type){case"Point":return this.compareCoord(e.coordinates,t.coordinates);case"LineString":return this.compareLine(e.coordinates,t.coordinates,0,!1);case"Polygon":return this.comparePolygon(e,t);case"Feature":return this.compareFeature(e,t);default:if(0===e.type.indexOf("Multi")){var n=this,i=o(e),c=o(t);return i.every(function(e){return this.some(function(t){return n.compare(e,t)})},c)}}return!1},i.prototype.compareCoord=function(e,t){return e[0].toFixed(this.precision)===t[0].toFixed(this.precision)&&e[1].toFixed(this.precision)===t[1].toFixed(this.precision)},i.prototype.compareLine=function(e,t,o,n){if(!r(e,t))return!1;var i=this.pseudoNode?e:this.removePseudo(e),c=this.pseudoNode?t:this.removePseudo(t);if(!n||this.compareCoord(i[0],c[0])||(c=this.fixStartIndex(c,i))){var s=this.compareCoord(i[o],c[o]);return this.direction||s?this.comparePath(i,c):this.compareCoord(i[o],c[c.length-(1+o)])?this.comparePath(i.slice().reverse(),c):!1}},i.prototype.fixStartIndex=function(e,t){for(var o,r=-1,n=0;n<e.length;n++)if(this.compareCoord(e[n],t[0])){r=n;break}return r>=0&&(o=[].concat(e.slice(r,e.length),e.slice(1,r+1))),o},i.prototype.comparePath=function(e,t){var o=this;return e.every(function(e,t){return o.compareCoord(e,this[t])},t)},i.prototype.comparePolygon=function(e,t){if(this.compareLine(e.coordinates[0],t.coordinates[0],1,!0)){var o=e.coordinates.slice(1,e.coordinates.length),r=t.coordinates.slice(1,t.coordinates.length),n=this;return o.every(function(e){return this.some(function(t){return n.compareLine(e,t,1,!0)})},r)}return!1},i.prototype.compareFeature=function(e,t){return e.id===t.id&&this.objectComparator(e.properties,t.properties)?this.compare(e.geometry,t.geometry):!1},i.prototype.removePseudo=function(e){return e},t.exports=i},{}]},{},[1])(1)});